script ::= (definition | statement)*

letter ::= 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j'
	| 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u'
	| 'v' | 'w' | 'x' | 'y' | 'z'
captial-letter ::= 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J'
	| 'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U'
	| 'V' | 'W' | 'X' | 'Y' | 'Z'
digit ::= '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'
character ::= _ ; Basically anything, not provided here

identifier ::= (letter | captial-letter) (letter | captial-letter | digit | '_')*
delimiter ::= '\n' | ';'

integer-literal ::= digit+
floating-point-literal::= digit* '.' digit+
number-literal ::= integer-literal | floating-point-literal

string-literal ::= '"' character* '"'

expression ::= ; TODO

definition-block ::= definition*
definition ::= function-definition

function-definition ::= 'function' identifier '(' parameter-list ')' statement-body 'end'
function-call ::= identifier '(' parameter-list ')'
parameter-list ::= (parameter ',')* parameter
parameter ::= identifier

statement-block ::= (statement delimiter)*
statement ::= variable-declartion
	| function-call
	| if-statement
	| while-statement
	| until-statement
	| for-statement

while-statement ::= 'while' expression 'do' statement-block 'end'
until-statement ::= 'repeat' statement-block 'until' expression
for-statement ::= 'for' identifier '=' expression expression expression 'do' statement-block 'end'
	| 'for' identifier '=' expression expression 'do' statement-block 'end'

